[{"path":"https://aterui.github.io/mcbrnet/articles/brnet.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"brnet","text":"brnet() generates random branching network specified number patches probability branching. key arguments number habitat patches (n_patch) probability branching (p_branch), users must specify. parameters, function generates branching network following steps: Draw number branches network. individual branch defined series connected patches one confluence (outlet) next confluence upstream (upstream terminal). number branches network \\(N_{b}\\) drawn binomial distribution \\(N_{b} \\sim Binomial(N,P_{b})\\), \\(N\\) number patches \\(P_b\\) branching probability. Draw number patches branch. number patches branch \\(q\\), \\(n_q\\), drawn geometric distribution \\(n_{q} \\sim Ge(P_b)\\) conditional \\(\\sum_{q}^{N_{b}} n_q = N\\). Organize branches bifurcating branching network. function returns: adjacency_matrix: adjacency matrix. distance_matrix: distance matrix. Distance patches measured number steps required reach focal patch target patch network. df_patch: data frame (dplyr::tibble) containing patch attributes. patch_id: patch ID. branch_id: branch ID. environment: environmental value patch (see details) disturbance: disturbance level (.e., proportional mortality) patch (see details) n_patch_upstream: number upstream contributing patches (including focal patch ; akin watershed area river networks).","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/brnet.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"brnet","text":"following script produce branching network n_patch = 50 p_branch = 0.5. default, brnet visualizes generated network using functions R packages igraph ggraph (plot = FALSE disable): default, patches colored based environmental values. view matrices, type following script: following script shows patch ID, branch ID, environmental values, disturbance values, number upstream contributing patches patch:","code":"net <- brnet(n_patch = 50, p_branch = 0.5) # adjacency matrix # showing 5 patches for example net$adjacency_matrix[1:5, 1:5] #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    0 #> [2,]    0    0    1    0    0 #> [3,]    0    1    0    0    0 #> [4,]    0    0    0    0    1 #> [5,]    0    0    0    1    0 # distance matrix # showing 5 patches for example net$distance_matrix[1:5, 1:5] #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    4    5    7    8 #> [2,]    4    0    1    7    8 #> [3,]    5    1    0    8    9 #> [4,]    7    7    8    0    1 #> [5,]    8    8    9    1    0 net$df_patch #> # A tibble: 50 × 5 #>    patch_id branch_id environment disturbance n_patch_upstream #>       <int>     <dbl>       <dbl>       <dbl>            <dbl> #>  1        1         1      -1.33        0.861               50 #>  2        2        10      -1.13        0.967                6 #>  3        3        10      -1.05        0.970                5 #>  4        4         7      -0.833       0.831               16 #>  5        5         7      -0.665       0.848               15 #>  6        6        13      -0.890       0.712                5 #>  7        7        13      -0.938       0.705                4 #>  8        8        13      -0.967       0.727                3 #>  9        9        13      -1.06        0.738                2 #> 10       10        13      -1.18        0.728                1 #> # ℹ 40 more rows"},{"path":"https://aterui.github.io/mcbrnet/articles/brnet.html","id":"customize-visualization","dir":"Articles","previous_headings":"","what":"Customize: visualization","title":"brnet","text":"Arguments: patch_label, patch_size Users may add patch labels using argument patch_label:    change patch size, specify patch_size:","code":"# patch ID brnet(n_patch = 50,       p_branch = 0.5) %>%    ggbrnet(patch_label = \"patch\") # branch ID brnet(n_patch = 50,       p_branch = 0.5) %>%    ggbrnet(patch_label = \"branch\") # number of upstream contributing patches brnet(n_patch = 50,       p_branch = 0.5) %>%    ggbrnet(patch_label = \"n_upstream\") brnet(n_patch = 50,       p_branch = 0.5) %>%    ggbrnet(patch_size = 1)"},{"path":"https://aterui.github.io/mcbrnet/articles/brnet.html","id":"customize-environment","dir":"Articles","previous_headings":"","what":"Customize: environment","title":"brnet","text":"Arguments: mean_env_source, sd_env_source, rho, sd_env_lon Environmental values generated detailed : Environmental values upstream terminal patches drawn normal distribution \\(z_h \\sim N(\\mu_{h}, \\sigma_h^2)\\) (arguments mean_env_source sd_env_source). Downstream environmental values determined autoregressive process \\(z_{} \\sim N(\\rho z_{}, \\sigma_l^2)\\) (argument sd_env_lon). bifurcation patches (confluence), environmental value takes weighted mean two contributing patches given size patches \\(N_{}\\) (number upstream contributing patches): \\(z_{} = \\omega(\\rho z_{, 1} + \\epsilon_1) + (1 - \\omega)(\\rho z_{,2} + \\epsilon_2)\\), \\(\\omega = \\frac{N_{,1}}{N_{,1} + N_{,2}}\\) \\(\\epsilon \\sim N(0, \\sigma_l^2)\\). Users may change values \\(\\mu_h\\) (default: mean_env_source = 0), \\(\\sigma_h\\) (sd_env_source = 1), \\(\\rho\\) (rho = 1), \\(\\sigma_l\\) (sd_env_lon = 0.1). Increasing value sd_env_source leads greater variation environmental values upstream terminals. argument rho determines strength longitudinal autocorrelation (greater stronger autocorrelation). argument sd_env_lon determines strength longitudinal environmental noise.","code":"# with large variation at headwaters brnet(n_patch = 50,       p_branch = 0.5,       sd_env_source = 3,       sd_env_lon = 0.5,       rho = 0.5) %>%    ggbrnet() # large local variation with no headwater variation brnet(n_patch = 50,       p_branch = 0.5,       sd_env_source = 0,       sd_env_lon = 3,       rho = 0.5) %>%    ggbrnet()"},{"path":"https://aterui.github.io/mcbrnet/articles/brnet.html","id":"customize-disturbance","dir":"Articles","previous_headings":"","what":"Customize: disturbance","title":"brnet","text":"Arguments: mean_disturb_source, sd_disturb_source , sd_disturb_lon Disturbance values generated detailed : Disturbance levels upstream terminal patches (.e., patches upstream patch) drawn normal distribution logit scale \\(logit~m_h \\sim N(logit~\\mu_{m}, \\sigma_{h,m}^2)\\). Disturbance cascades downstream environmental values: \\(logit~m_{} \\sim N(logit~m_{}, \\sigma_{l,m}^2)\\). bifurcation patches (confluence), disturbance value takes weighted mean two contributing patches given stream size patches \\(N_{}\\) (number upstream contributing patches): \\(logit~m_{} = \\omega(logit~m_{, 1} + \\epsilon_1) + (1 - \\omega)(logit~ m_{,2} + \\epsilon_2)\\), \\(\\omega = \\frac{N_{,1}}{N_{,1} + N_{,2}}\\) \\(\\epsilon \\sim N(0, \\sigma_{l,m}^2)\\). Users may change values \\(\\mu_{m}\\) (mean_disturb_source), \\(\\sigma_{h,m}\\) (sd_disturb_source) \\(\\sigma_{l,m}\\)(sd_disturb_lon).","code":"# with large variation at headwaters brnet(n_patch = 50,       p_branch = 0.5,       sd_disturb_source = 3,       sd_disturb_lon = 0.5) %>%    ggbrnet(patch_color = \"disturb\") # with large local variation with no headwater variation brnet(n_patch = 50,       p_branch = 0.5,       sd_disturb_source = 0,       sd_disturb_lon = 3) %>%    ggbrnet(patch_color = \"disturb\")"},{"path":"https://aterui.github.io/mcbrnet/articles/brnet.html","id":"customize-environmental-pollutants","dir":"Articles","previous_headings":"","what":"Customize: environmental pollutants","title":"brnet","text":"Arguments: x, n_source, p, q, pattern v.1.3.0, mcbrnet offers ptsource() function simulate propagation environmental pollutants branching network. ptsource() can specify: x brnet() object n_source number point sources p strength downstream propagation q strength upstream propagation pattern spatial pattern point sources - \"random\", \"cluster\", \"upstream\", \"downstream\" function takes brnet() object first argument, ’s compatible pipe %>%. concentration pollutants value 1.0 point sources decays distance \\(p^d\\) downstream (\\(d=\\) distance, \\(p=\\) geometric coefficient distance decay) \\(q^d\\) upstream. example, focal location 3 patches downstream point source \\(p = 0.8\\), concentration \\(0.8^3 = 0.512\\). setting different values p q, users can model asymmetric propagation environmental pollutants. example, following script add new column impact represents concentration hypothetical environmental pollutant: Also, easy visualize spatial pattern pollution ggbrnet(). Just need set patch_color = \"\" value_col = \"impact\".  Finally, possible specify spatial pattern point sources. default, function generates point sources random, may realistic spatial clusters. \"cluster\" pattern randomly pick one location point source, rest point sources appear close initial point source:  \"upstream\" pattern pick point source locations smaller tributaries (.e., based number upstream patches), necessarily clustered:  \"downstream\" opposite (pick larger streams):","code":"y <- brnet(n_patch = 10) %>%    ptsource(n_source = 3,            p = 0.8,            q = 0)   y$df_patch #> # A tibble: 10 × 7 #>    patch_id impact point_source branch_id environment disturbance #>       <int>  <dbl>        <dbl>     <dbl>       <dbl>       <dbl> #>  1        1   2.36            1         1      0.163        0.964 #>  2        2   1.7             1         1      0.272        0.970 #>  3        3   0               0         5      0.473        0.879 #>  4        4   1               1         2      0.0756       0.972 #>  5        5   0               0         2      0.0314       0.974 #>  6        6   0               0         2      0.0124       0.979 #>  7        7   0               0         3     -0.586        0.995 #>  8        8   0               0         3     -0.525        0.994 #>  9        9   0               0         4      0.676        0.918 #> 10       10   0               0         4      0.783        0.908 #> # ℹ 1 more variable: n_patch_upstream <dbl> brnet(n_patch = 30) %>%    ptsource(n_source = 3,            p = 0.8,            q = 0) %>%    ggbrnet(patch_color = \"other\",            value_col = \"impact\") brnet(n_patch = 30) %>%    ptsource(n_source = 3,            p = 0.8,            q = 0,            pattern = \"cluster\") %>%    ggbrnet(patch_color = \"other\",            value_col = \"impact\") brnet(n_patch = 30) %>%    ptsource(n_source = 3,            p = 0.8,            q = 0,            pattern = \"upstream\") %>%    ggbrnet(patch_color = \"other\",            value_col = \"impact\") brnet(n_patch = 30) %>%    ptsource(n_source = 3,            p = 0.8,            q = 0,            pattern = \"downstream\") %>%    ggbrnet(patch_color = \"other\",            value_col = \"impact\")"},{"path":"https://aterui.github.io/mcbrnet/articles/brnet.html","id":"customize-fragmentation","dir":"Articles","previous_headings":"","what":"Customize: fragmentation","title":"brnet","text":"Arguments: x, rate, pattern, p, n_barrier frgm() impose fragmentation network. function can specify: x ‘brnet’ object adjacency matrix rate rate parameter exponential dispersal kernel (.e., species attribute). parameter defines result dispersal matrix. pattern fragmentation pattern; either “random” (random location fragmentation), “upstream” (upstream edges likely fragmented), “downstream” (downstream edges likely fragmented). p passability fragmented edges (probability) n_barrier number barriers arguments p n_barrier define probability traversing across edge barrier number total barriers , respectively. Passability can different among barriers; case, user must specify passabilities individual barriers separately (vector length n_barrier). barrier effect cumulative. example, one passes two barriers (passability = \\(p_A\\)) B (passability \\(p_B\\)) moving given node node another node, original movement probability \\(m\\) reduced \\(m p_Ap_B\\). Just like ptsource(), function take output brnet() function also accepts adjacency matrix. ggbrnet() help visualize fragmented edges specifying edge_weight = \"passability\". Example: random pattern:  Example: upstream pattern:  Example: downstream pattern:","code":"brnet(n_patch = 30) %>%   frgm(rate = 0.1,        p = 0.1,        n_barrier = 5,        pattern = \"random\") %>%   ggbrnet(edge_weight = \"passability\") brnet(n_patch = 30) %>%   frgm(rate = 0.1,        p = 0.1,        n_barrier = 5,        pattern = \"upstream\") %>%   ggbrnet(edge_weight = \"passability\") brnet(n_patch = 30) %>%   frgm(rate = 0.1,        p = 0.1,        n_barrier = 5,        pattern = \"downstream\") %>%   ggbrnet(edge_weight = \"passability\")"},{"path":"https://aterui.github.io/mcbrnet/articles/ggbrnet.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"ggbrnet","text":"ggbrnet() wrapper ggraph functions easy visualization network produced brnet() .","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/ggbrnet.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"ggbrnet","text":"ggbrnet() takes brnet() object first argument, ’s compatible pipe %>%. default, colors patches based environmental values df_patch$environment:","code":"brnet() %>%    ggbrnet()"},{"path":"https://aterui.github.io/mcbrnet/articles/ggbrnet.html","id":"patch-color","dir":"Articles","previous_headings":"","what":"Patch color","title":"ggbrnet","text":"Arguments: patch_color Users can change color patches specifying patch_color. Default env referring environment column patch_attr argument. Another option disturb referring disturbance column:  special case, function accepts \"\", allows users specify column $df_patch. case, required specify column data exist value_col quotation:  patch_color neither env, disturb, , function takes ordinary color name, example:","code":"brnet() %>%    ggbrnet(patch_color = \"disturb\") df0 <- brnet() df0$df_patch <- df0$df_patch %>%    mutate(x = runif(50, 0, 100))  df0 %>%    ggbrnet(patch_color = \"other\",           value_col = \"x\") brnet() %>%    ggbrnet(patch_color = \"salmon\")"},{"path":"https://aterui.github.io/mcbrnet/articles/ggbrnet.html","id":"patch-label","dir":"Articles","previous_headings":"","what":"Patch label","title":"ggbrnet","text":"Arguments: patch_label Users may add patch labels using argument patch_label:    Users may specify additional arguments passed ggraph::geom_node_label() tweak details, example:","code":"# patch ID brnet() %>%    ggbrnet(patch_label = \"patch\") # branch ID brnet() %>%    ggbrnet(patch_label = \"branch\") # number of upstream contributing patches brnet() %>%    ggbrnet(patch_label = \"n_upstream\") # branch ID adjust label position brnet() %>%    ggbrnet(patch_label = \"branch\",           nudge_x = 0.2)"},{"path":"https://aterui.github.io/mcbrnet/articles/ggbrnet.html","id":"patch-size","dir":"Articles","previous_headings":"","what":"Patch size","title":"ggbrnet","text":"change patch size, specify patch_size:","code":"brnet() %>%   ggbrnet(patch_size = 1)"},{"path":"https://aterui.github.io/mcbrnet/articles/igpsim.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"igpsim","text":"igpsim() simulates tri-trophic food web dynamics intraguild predation space. function employs discrete time-series model (extension Nicholson-Bailey model), detailed Pomeranz et al. 2023. food web dynamics simulated (1) local predator-prey interactions within habitat patch, (2) immigration, (3) emigration. function returns: df_dynamics data frame containing simulated food web dynamics*. timestep: time-step. patch_id: patch ID. carrying_capacity: carrying capacity patch. disturbance: disturbance-induced mortality patch x time-step t. species: species ID. abundance: abundance species patch x. fcl: food chain length df_species data frame containing species attributes. species: species ID. mean_abundance: mean abundance (arithmetic) species across sites time-steps. p_dispersal: dispersal probability species . df_patch data frame containing patch attributes. patch_id: patch ID. fcl: temporal average food chain length. carrying_capacity: carrying capacity patch. disturbance: disturbance-induced mortality patch. df_int data frame containing interaction parameters. interaction: column identifying interaction pairs conv_eff: conversion efficiency attak_rate: attack rate handling_time: handling time df_xy_coord xy coordinates habitat patches (NULL distance_matrix dispersal_matrix provided) distance_matrix distance matrix used simulation.","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/igpsim.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"igpsim","text":"following script simulates tri-trophic dynamics n_patch = 5, assumes five habitat patches randomly distributed square space. default, igpsim() simulates food web dynamics 200 warm-(initialization species introductions: n_warmup), 200 burn-(burn-period species introductions: n_burnin), 1000 time-steps records (n_timestep). mcsim(), simulated dynamics can visualized plot = TRUE, show five sample patches:  named list return values:","code":"igp <- igpsim(n_patch = 5) igp <- igpsim(n_patch = 5, plot = TRUE) igp #> $df_dynamics #> # A tibble: 15,000 × 7 #>    timestep patch_id carrying_capacity disturbance species     abundance   fcl #>       <dbl>    <dbl>             <dbl>       <dbl> <fct>           <dbl> <dbl> #>  1        1        1               100           0 basal              65     2 #>  2        1        1               100           0 ig-prey             0     2 #>  3        1        1               100           0 ig-predator        22     2 #>  4        1        2               100           0 basal              67     2 #>  5        1        2               100           0 ig-prey             0     2 #>  6        1        2               100           0 ig-predator        39     2 #>  7        1        3               100           0 basal              80     2 #>  8        1        3               100           0 ig-prey             0     2 #>  9        1        3               100           0 ig-predator        22     2 #> 10        1        4               100           0 basal              62     2 #> # ℹ 14,990 more rows #>  #> $df_species #> # A tibble: 3 × 3 #>   species     mean_abundance p_dispersal #>   <fct>                <dbl>       <dbl> #> 1 basal                 61.1         0.1 #> 2 ig-prey                0           0.1 #> 3 ig-predator           29.2         0.1 #>  #> $df_patch #> # A tibble: 5 × 4 #>   patch_id   fcl carrying_capacity disturbance #>      <dbl> <dbl>             <dbl>       <dbl> #> 1        1     2               100           0 #> 2        2     2               100           0 #> 3        3     2               100           0 #> 4        4     2               100           0 #> 5        5     2               100           0 #>  #> $df_int #> # A tibble: 3 × 4 #>   interaction            conv_eff attack_rate handling_time #>   <chr>                     <dbl>       <dbl>         <dbl> #> 1 ig-prey on basal            0.9        0.05           0.5 #> 2 ig-predator on basal        0.9        0.05           0.5 #> 3 ig-predator on ig-prey      0.9        0.05           0.5 #>  #> $df_xy_coord #> # A tibble: 5 × 2 #>   x_coord y_coord #>     <dbl>   <dbl> #> 1   3.39     8.41 #> 2   0.447    4.56 #> 3   6.62     8.14 #> 4   0.416    1.80 #> 5   2.93     5.72 #>  #> $distance_matrix #>          1        2        3        4        5 #> 1 0.000000 4.844239 3.241191 7.245116 2.729603 #> 2 4.844239 0.000000 7.134342 2.760228 2.740678 #> 3 3.241191 7.134342 0.000000 8.866279 4.411391 #> 4 7.245116 2.760228 8.866279 0.000000 4.653682 #> 5 2.729603 2.740678 4.411391 4.653682 0.000000"},{"path":"https://aterui.github.io/mcbrnet/articles/igpsim.html","id":"custom-brnet-igpsim","dir":"Articles","previous_headings":"","what":"Custom: brnet() + igpsim()","title":"igpsim","text":"brnet() outputs compatible igpsim(). example, .$distance_matrix may used inform arguments igpsim(). providing distance matrix, following script simulate food web dynamics random branching network produced brnet() function:","code":"patch <- 100  net <- brnet(n_patch = patch,              p_branch = 0.5)  igp <- with(net,             igpsim(n_patch = patch,                    distance_matrix = distance_matrix,                    plot = TRUE)             )"},{"path":"https://aterui.github.io/mcbrnet/articles/igpsim.html","id":"custom-parameter-detail","dir":"Articles","previous_headings":"","what":"Custom: parameter detail","title":"igpsim","text":"Users can tweak (1) food web attributes, (2) patch attributes, (3) landscape structure.","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/igpsim.html","id":"food-web-attributes","dir":"Articles","previous_headings":"Custom: parameter detail","what":"Food web attributes","title":"igpsim","text":"Arguments: r_b, conv_eff, attack_rate, handling_time, s Food web attributes determined based maximum reproductive rate basal species (r_b), conversion efficiency conv_eff, attack rate attack_rate, handling time handling_time, switching parameter s. Basal species – r_b one parameters defining population growth basal species, modeled follows: \\[ B_{t} = \\frac{B_{t-1}r_b}{1 + \\frac{r_b - 1}{K}B_{t-1}}, \\] \\(B_t\\) abundance basal species time \\(t\\), \\(r_b\\) maximum growth rate (= r_b), \\(K\\) carrying capacity (= carrying_capacity; see Patch attributes). parameters \\(r_b\\) \\(K\\) may vary habitat; model variations, users may supply vectors r_b carrying_capacity, whose length equal n_patch. function assumes values supplied order patch 1, 2, 3, …, n_patch. Thus, care must taken match order , e.g., distance_matrix. Consumers (intraguild prey predator) – predator-prey interactions modeled Nicholson-Bailey model, extended account intraguild predation (see Pomeranz et al. 2023, Ecosphere; equations 5 – 9 details). function assumes discrete version Holling’s Type-II functional response, attack rate (atttack_rate) handling time (handling_time) define survival function \\(f(\\cdot)\\) prey follows: \\[ \\begin{aligned} f(B, C) &= \\exp(-\\frac{a_{BC}C}{1 + a_{BC}h_{BC}B}) &&\\text{C B},\\\\ f(B, P) &= \\exp(-\\frac{(1 + \\phi)a_{BP}P}{1 + a_{BP}h_{BP}B}) &&\\text{P B},\\\\ f(C, P) &= \\exp(-\\frac{(1 - \\phi)a_{CP}P}{1 + a_{CP}h_{CP}C}) &&\\text{P C},\\\\ \\end{aligned} \\] \\(C\\) \\(P\\) abundances intraguild prey predator, respectively, \\(a_{ij}\\) attack rate consumer \\(j\\) prey \\(\\) (= attack_rate), \\(h_{ij}\\) handling time (= handling_time). arguments supplied scalars, function assumes constant values interactions (.e., \\(a_{BC} = a_{BP} = a_{CP} = const.\\) \\(h_{BC} = h_{BP} = h_{CP} = const.\\)). appropriate, users may apply different values supplying vectors; case, function assumes parameter values appear order \\(a_{BC}\\) (\\(h_{BC}\\)), \\(a_{BP}\\) (\\(h_{BC}\\)), \\(a_{CP}\\) (\\(h_{CP}\\)). parameter \\(\\phi\\) quantifies switching tendency intraguild predator, defined follows: \\[ \\phi = \\frac{s(B - C)}{B+C} \\] parameter \\(s\\) (= s) determines likelihood switching basal species, higher values \\(s\\) indicating greater switching tendency basal species. Lastly, conversion efficiency (= conv_eff) quantifies effectiveness consumers transforming capture prey consumer’s abundance. conv_eff must scalar (supply identical values interactions) must supplied order \\(BC\\), \\(BP\\), \\(CP\\). Note function assumes following order ecological events: \\(B\\)’s reproduction \\(\\rightarrow\\) \\(C\\)’s predation \\(B\\) \\(\\rightarrow\\) \\(C\\)’s reproduction \\(\\rightarrow\\) \\(P\\)’s predation \\(B\\) \\(C\\) \\(\\rightarrow\\) \\(P\\)’s reproduction.","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/igpsim.html","id":"patch-attributes","dir":"Articles","previous_headings":"Custom: parameter detail","what":"Patch attributes","title":"igpsim","text":"Arguments: carrying_capacity p_disturb, i_disturb, phi_disturb Patch attributes characterized carrying capacity (= carrying_capacity) disturbance (probability occurrence = p_disturb, disturbance intensity = i_disturb, temporal precision disturbance intensity = phi_disturb). carrying_capacity i_disturb can supplied patch specific values, provided vector lengths match n_patch. arguments p_disturb phi_disturb given scalars. p_disturb controls often disturbance occurs, phi_disturb regulates temporal variability disturbance intensity occurs (greater values phi_disturb indicating less temporal variability). Note disturbance events function designed resemble regional disturbance, affects habitat patches occurs. Thus, disturbance heterogeneity within landscape introduced i_disturbance argument desired.","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/igpsim.html","id":"landscape-attributes","dir":"Articles","previous_headings":"Custom: parameter detail","what":"Landscape attributes","title":"igpsim","text":"Arguments: xy_coord, distance_matrix, landscape_size, theta See Article mcsim()","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/igpsim.html","id":"others","dir":"Articles","previous_headings":"Custom: parameter detail","what":"Others","title":"igpsim","text":"Arguments: n_warmup, n_burnin, n_timestep See Article mcsim()","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/igpsim.html","id":"model-description","dir":"Articles","previous_headings":"","what":"Model description","title":"igpsim","text":"Full model descriptions available Pomeranz et al. 2023, Ecosphere.","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/mcsim.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"mcsim","text":"mcsim() simulates metacommunity dynamics given landscape. Community dynamics modeled based Beverton-Holt function. Although function designed compatible brnet(), users can provide distance matrix simulate dynamics landscape. key arguments number habitat patches (n_patch) number species metacommunity (n_species). Metacommunity dynamics simulated (1) local dynamics (population growth competition among species), (2) immigration, (3) emigration. function returns: df_dynamics data frame containing simulated metacommunity dynamics*. timestep: time-step. patch_id: patch ID. mean_env: mean environmental condition patch. env: environmental condition patch x time-step t. carrying_capacity: carrying capacity patch. species: species ID. niche_optim: optimal environmental value species . r_xt: reproductive number species patch x time-step t. abundance: abundance species patch x. df_species data frame containing species attributes. species: species ID. mean_abundance: mean abundance (arithmetic) species across sites time-steps. r0: maximum reproductive number species . niche_optim: optimal environmental value species . sd_niche_width: niche width species . p_dispersal: dispersal probability species . df_patch data frame containing patch attributes. patch_id: patch ID. alpha_div: alpha diversity averaged across time-steps. mean_env: mean environmental condition patch. carrying_capacity: carrying capacity patch. disturbance: disturbance-induced mortality patch. df_diversity data frame containing diversity metrics (α, β, γ). distance_matrix distance matrix used simulation. interaction_matrix species interaction matrix, species X (column) influences species Y (row). *NOTE: warm-burn-periods included return values.","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/mcsim.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"mcsim","text":"following script simulates metacommunity dynamics n_patch = 5 n_species = 5. default, mcsim() simulates metacommunity dynamics 200 warm-(initialization species introductions: n_warmup), 200 burn-(burn-period species introductions: n_burnin), 1000 time-steps records (n_timestep). Users can visualize simulated dynamics using plot = TRUE, show five sample patches species randomly chosen:  named list return values:","code":"mc <- mcsim(n_patch = 5, n_species = 5) mc <- mcsim(n_patch = 5, n_species = 5, plot = TRUE) mc #> $df_dynamics #> # A tibble: 25,000 × 9 #>    timestep patch_id mean_env     env carrying_capacity species niche_optim #>       <dbl>    <dbl>    <dbl>   <dbl>             <dbl>   <dbl>       <dbl> #>  1        1        1        0  0.0903               100       1       0.706 #>  2        1        1        0  0.0903               100       2       0.920 #>  3        1        1        0  0.0903               100       3      -0.783 #>  4        1        1        0  0.0903               100       4      -0.836 #>  5        1        1        0  0.0903               100       5      -0.162 #>  6        1        2        0 -0.0291               100       1       0.706 #>  7        1        2        0 -0.0291               100       2       0.920 #>  8        1        2        0 -0.0291               100       3      -0.783 #>  9        1        2        0 -0.0291               100       4      -0.836 #> 10        1        2        0 -0.0291               100       5      -0.162 #> # ℹ 24,990 more rows #> # ℹ 2 more variables: r_xt <dbl>, abundance <dbl> #>  #> $df_species #> # A tibble: 5 × 6 #>   species mean_abundance    r0 niche_optim sd_niche_width p_dispersal #>     <dbl>          <dbl> <dbl>       <dbl>          <dbl>       <dbl> #> 1       1           20.2     4       0.706          0.598         0.1 #> 2       2           17.8     4       0.920          0.979         0.1 #> 3       3           25.8     4      -0.783          0.803         0.1 #> 4       4            0       4      -0.836          0.154         0.1 #> 5       5           67.5     4      -0.162          0.688         0.1 #>  #> $df_patch #> # A tibble: 5 × 5 #>   patch_id alpha_div mean_env carrying_capacity disturbance #>      <dbl>     <dbl>    <dbl>             <dbl>       <dbl> #> 1        1      4           0               100           0 #> 2        2      4           0               100           0 #> 3        3      4           0               100           0 #> 4        4      3.91        0               100           0 #> 5        5      4           0               100           0 #>  #> $df_diversity #> # A tibble: 1 × 3 #>   alpha_div beta_div gamma_div #>       <dbl>    <dbl>     <dbl> #> 1      3.98     1.00         4 #>  #> $df_xy_coord #> # A tibble: 5 × 2 #>   x_coord y_coord #>     <dbl>   <dbl> #> 1    2.20    3.05 #> 2    4.59    6.09 #> 3    3.33    4.10 #> 4    9.12    9.11 #> 5    6.15    5.31 #>  #> $distance_matrix #>          1        2        3        4        5 #> 1 0.000000 3.869920 1.542678 9.201087 4.554968 #> 2 3.869920 0.000000 2.357542 5.445217 1.746647 #> 3 1.542678 2.357542 0.000000 7.659341 3.073475 #> 4 9.201087 5.445217 7.659341 0.000000 4.820865 #> 5 4.554968 1.746647 3.073475 4.820865 0.000000 #>  #> $interaction_matrix #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    0    0    0    0 #> [2,]    0    1    0    0    0 #> [3,]    0    0    1    0    0 #> [4,]    0    0    0    1    0 #> [5,]    0    0    0    0    1"},{"path":"https://aterui.github.io/mcbrnet/articles/mcsim.html","id":"custom-brnet-mcsim","dir":"Articles","previous_headings":"","what":"Custom: brnet() + mcsim()","title":"mcsim","text":"brnet() outputs compatible mcsim(). example, df_patch$environment, df_patch$n_patch_upstream, df_patch$distance_matrix may used inform arguments mcsim():","code":"patch <- 100 net <- brnet(n_patch = patch,              p_branch = 0.5)  mc <- with(net,            mcsim(n_patch = patch,                  n_species = 5,                  mean_env = df_patch$environment,                  carrying_capacity = df_patch$n_patch_upstream * 10,                  distance_matrix = distance_matrix,                  plot = TRUE)            )"},{"path":"https://aterui.github.io/mcbrnet/articles/mcsim.html","id":"custom-parameter-detail","dir":"Articles","previous_headings":"","what":"Custom: parameter detail","title":"mcsim","text":"Users can tweak (1) species attributes, (2) competition, (3) patch attributes, (4) landscape structure.","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/mcsim.html","id":"species-attributes","dir":"Articles","previous_headings":"Custom: parameter detail","what":"Species attributes","title":"mcsim","text":"Arguments: r0, niche_optim min_optim max_optim, sd_niche_width min_niche_width max_niche_width, niche_cost, p_dispersal , zeta Species attributes determined based maximum reproductive rate r0, optimal environmental value niche_optim (min_optim max_optim random generation niche_optim), niche width sd_niche_width (min_niche_width max_niche_width random generation sd_niche_width) dispersal probability p_dispersal (see Model description details). optimal environmental values (niche optimum), function default assigns random values species : \\(\\mu_i \\sim \\mbox{Unif}(\\mu_{min}, \\mu_{max})\\), users can set values \\(\\mu_{min}\\) \\(\\mu_{max}\\) using min_optim max_optim arguments (default: min_optim = -1 max_optim = 1). Alternatively, users may specify species niche optimums using argument niche_optim (scalar vector). single value vector niche_optim provided, function ignores min_optim max_optim arguments. Similarly, function default assigns random values \\(\\sigma_{niche}\\) species : \\(\\sigma_{niche,} \\sim \\mbox{Unif}(\\sigma_{niche,min}, \\sigma_{niche,max})\\). Users can set values \\(\\sigma_{niche,min}\\) \\(\\sigma_{niche,max}\\) using min_niche_width max_niche_width arguments (default: min_niche_width = 0.1 max_niche_width = 1). single value vector sd_niche_width provided, function ignores min_niche_width max_niche_width arguments. argument niche_cost determines cost wider niche. Smaller values imply greater costs wider niche (.e., decreased maximum reproductive rate; default: niche_cost = 1). disable (cost wide niche), set niche_cost = Inf. parameters, users may specify species attributes giving scalar (assume identical among species) vector values whose length must one equal n_species. Default values r0 = 4, sd_niche_width = 1, p_dispersal = 0.1. argument zeta determines sensitivity environmental pollutants \\(\\exp(-\\zeta~impact)\\), multiplied patch-specific population growth represent negative impacts pollutants. \\(impact\\) represents concentration hypothetical environmental pollutants (see q patch attributes). parameter \\(\\zeta\\) determines sensitivity environmental pollutants, larger values indicate greater species sensitivity. pollutant effect \\(\\zeta = 0\\).","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/mcsim.html","id":"competition","dir":"Articles","previous_headings":"Custom: parameter detail","what":"Competition","title":"mcsim","text":"Arguments: interaction_type, alpha min_alpha max_alpha argument interaction_type determines whether interaction coefficient alpha constant random variable. interaction_type = \"constant\", interaction coefficients \\(\\alpha_{ij, \\ne j}\\) pairs species set constant alpha (.e., -diagonal elements interaction matrix). interaction_type = \"random\", \\(\\alpha_{ij, \\ne j}\\) drawn uniform distribution \\(\\alpha_{ij, \\ne j} \\sim \\mbox{Unif}(\\alpha_{min}, \\alpha_{max})\\) corresponding arguments min_alpha max_alpha. argument alpha ignored scenario random interaction strength (.e., interaction_type = \"random\"). Note diagonal elements interaction matrix (\\(\\alpha_{ii}\\)) always 1.0 regardless interaction_type, alpha strength interspecific competition relative intraspecific competition (see Model description). default, interaction_type = \"constant\" alpha = 0.","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/mcsim.html","id":"patch-attributes","dir":"Articles","previous_headings":"Custom: parameter detail","what":"Patch attributes","title":"mcsim","text":"Arguments: carrying_capacity, mean_env, sd_env, spatial_env_cor, phi, p_disturb, i_disturb , impact arguments carrying_capacity (default: carrying_capacity = 100) mean_env (default: mean_env = 0) determines mean environmental values habitat patches, can scalar (assume identical among patches) vector (length must equal n_patch). arguments sd_env (default: sd_env = 0.1), spatial_env_cor (default: spatial_env_cor = FALSE) phi (default: phi = 1) determine spatio-temporal dynamics environmental values. sd_env determines magnitude temporal environmental fluctuations. spatial_env_cor = TRUE, function models spatial autocorrelation temporal environmental fluctuation based multi-variate normal distribution. degree spatial autocorrelation determined phi, parameter describing strength distance decay spatial autocorrelation. Users can also define disturbance probability (p_disturb) mortality (i_disturb). disturbance occurs, habitat patches reduced i_disturb. i_disturb can identical different across habitat patches. Lastly, argument impact defines concentration hypothetical environmental pollutants. values converted \\(\\exp(-\\zeta~impact)\\), multiplied patch-specific population growth. Thus, greater reduction factor applied value \\(impact\\) increases. parameter \\(\\zeta\\) determines sensitivity environmental pollutants (see argument zeta species attributes).","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/mcsim.html","id":"landscape-structure","dir":"Articles","previous_headings":"Custom: parameter detail","what":"Landscape structure","title":"mcsim","text":"Arguments: xy_coord distance_matrix, landscape_size, theta arguments define landscape structure. default, function produces square-shaped landscape (landscape_size = 10 side) habitat patches distributed randomly Poisson point process (.e., x- y-coordinates patches drawn uniform distribution). parameter θ describes shape distance decay species dispersal (see Model description) determines patches’ structural connectivity (default: theta = 1). Users can define landscape providing either xy_coord distance_matrix (landscape_size ignored either arguments provided). xy_coord provided (2-column data frame denoting x- y-coordinates patches, respectively; NULL default), function calculates distance patches based coordinates. Alternatively, users may provide distance_matrix (object must matrix), describes distance habitat patches. argument distance_matrix overrides xy_coord.","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/mcsim.html","id":"others","dir":"Articles","previous_headings":"Custom: parameter detail","what":"Others","title":"mcsim","text":"Arguments: n_warmup, n_burnin, n_timestep argument n_warmup period species introductions occur (default: n_warmup = 200). initial number individuals introduced follows Poisson distribution mean 0.5 independent across space time. random introduction events occur multiple times n_warmup period, propagule_interval determines timestep interval random introductions (default: propagule_interval = ceiling(n_warmup / 10)). argument n_burnin period discarded burn-remove influence initial values (default: n_burnin = 200). burn-period, species introductions occur. argument n_timestep simulation peiord recorded return df_dynamics (default: n_timestep = 1000). result, default setting, function simulates 1400 timesteps (n_warmup + n_burnin + n_timestep = 1400) returns last 1000 timesteps resulting metacommunity dynamics. derived statistics (e.g., diversity metrics df_diversity df_patch) calculated based results n_timestep.","code":""},{"path":"https://aterui.github.io/mcbrnet/articles/mcsim.html","id":"model-description","dir":"Articles","previous_headings":"","what":"Model description","title":"mcsim","text":"Full model descriptions available Terui et al. 2021, PNAS.","code":""},{"path":"https://aterui.github.io/mcbrnet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Akira Terui. Maintainer.","code":""},{"path":"https://aterui.github.io/mcbrnet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Terui , Pomeranz JF, Shibasaki S (2024). mcbrnet: Ecological simulation spatial networks. R package version 1.4.0, https://github.com/aterui/mcbrnet.","code":"@Manual{,   title = {mcbrnet: Ecological simulation in spatial networks},   author = {Akira Terui and Justin F. Pomeranz and Shota Shibasaki},   year = {2024},   note = {R package version 1.4.0},   url = {https://github.com/aterui/mcbrnet}, }"},{"path":[]},{"path":"https://aterui.github.io/mcbrnet/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Ecological simulation in spatial networks","text":"R package mcbrnet provides functions perform ecological simulations spatial networks. Main functions package can: (1) generate random branching network specified number patches probability branching (brnet()); (2) simulate metacommunity/foodweb dynamics space (mcsim(), igpsim()). See Articles instruction.","code":""},{"path":"https://aterui.github.io/mcbrnet/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Ecological simulation in spatial networks","text":"Current best citation package : Terui , Kim S, Dolph CL, Kadoya T, Miyazaki Y. (2021) Emergent dual scaling riverine biodiversity. Proceedings National Academy Sciences 118: e2105574118","code":""},{"path":"https://aterui.github.io/mcbrnet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Ecological simulation in spatial networks","text":"latest version mcbrnet package can installed : development version mcbrnet package can installed :","code":"#install.packages(\"remotes\") remotes::install_github(\"aterui/mcbrnet@1.4.0\") library(mcbrnet) #install.packages(\"remotes\") remotes::install_github(\"aterui/mcbrnet\") library(mcbrnet)"},{"path":"https://aterui.github.io/mcbrnet/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Ecological simulation in spatial networks","text":"material based upon work supported National Science Foundation Division Environmental Biology (DEB 2015634).","code":""},{"path":"https://aterui.github.io/mcbrnet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Akira Terui Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/adjtodist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an adjacency matrix to a distance matrix — adjtodist","title":"Convert an adjacency matrix to a distance matrix — adjtodist","text":"Convert adjacency matrix distance matrix","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/adjtodist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an adjacency matrix to a distance matrix — adjtodist","text":"","code":"adjtodist(x)"},{"path":"https://aterui.github.io/mcbrnet/reference/adjtodist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an adjacency matrix to a distance matrix — adjtodist","text":"x Adjacency matrix converted","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/adjtodist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert an adjacency matrix to a distance matrix — adjtodist","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/brnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random branching network — brnet","title":"Generate a random branching network — brnet","text":"Generate random branching network","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/brnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random branching network — brnet","text":"","code":"brnet(   n_patch = 50,   p_branch = 0.5,   mean_env_source = 0,   sd_env_source = 1,   rho = 1,   sd_env_lon = 0.1,   mean_disturb_source = 0.9,   sd_disturb_source = 1,   sd_disturb_lon = 0.1,   randomize_patch = TRUE,   n_patch_free = FALSE )"},{"path":"https://aterui.github.io/mcbrnet/reference/brnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random branching network — brnet","text":"n_patch Number patches network. p_branch Branching probability (success probability geometric distribution). mean_env_source Mean value environmental condition upstream terminals. sd_env_source SD environmental condition upstream terminals. rho Strength spatial autocorrelation environmental condition. sd_env_lon SD longitudinal environmental noise. mean_disturb_source Mean disturbance strength headwaters. value assumed represent proportional mortality (0 - 1.0) patch level. sd_disturb_source SD disturbance strength headwaters. SD defined logit scale normal distribution. sd_disturb_lon SD longitudinal noise disturbance strength. SD defined logit scale normal distribution. randomize_patch Whether randomize patches . FALSE, function may generate biased network ordered patches. Default TRUE. n_patch_free Whether imposing constraint n_patch. TRUE, number patches random variable following negative binomial distribution.","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/brnet.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Generate a random branching network — brnet","text":"see package webpage instruction","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/brnet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a random branching network — brnet","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/brnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random branching network — brnet","text":"","code":"if (FALSE) { # not run brnet(n_patch = 10, p_branch = 0.5) }"},{"path":"https://aterui.github.io/mcbrnet/reference/extra_prey.html","id":null,"dir":"Reference","previous_headings":"","what":"Extra prey function — extra_prey","title":"Extra prey function — extra_prey","text":"Extra prey function","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/extra_prey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extra prey function — extra_prey","text":"","code":"extra_prey(alpha0, j, i0, tp, theta, kappa, cannibal = FALSE)"},{"path":"https://aterui.github.io/mcbrnet/reference/extra_prey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extra prey function — extra_prey","text":"alpha0 Numeric matrix. n_species x n_species interaction matrix j Integer. Consumer's index i0 Integer. Index first prey tp Numeric. Initial trophic positions theta Numeric. Scale parameter exponential distribution. Smaller values indicate greater trophic specialization. kappa Integer. Number extra prey items cannibal Logical. TRUE, cannibalism allowed","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/extra_prey.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extra prey function — extra_prey","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/findr.html","id":null,"dir":"Reference","previous_headings":"","what":"Find suitable intrinsic growth rates — findr","title":"Find suitable intrinsic growth rates — findr","text":"Find suitable intrinsic growth rates","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/findr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find suitable intrinsic growth rates — findr","text":"","code":"findr(   alpha,   k0,   theta = 1,   lambda0 = 0,   interval = 0.01,   sigma = 0.01,   maxit = 1000 )"},{"path":"https://aterui.github.io/mcbrnet/reference/findr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find suitable intrinsic growth rates — findr","text":"alpha Numeric matrix. n_species x n_species interaction matrix k0 Numeric. Total carrying capacity basal species combined theta Numeric. Shape parameter Dirichlet distribution determines relative equilibrium densities basal species lambda0 Numeric. Initial lambda value exponential decay equilibrium densities trophic position interval Numeric. Increment lambda value. sigma Numeric. Degree noise added equilibrium densities maxit Integer. Maximum number iterations find suitable lambda","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/findr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find suitable intrinsic growth rates — findr","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/foodchain.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatiotemporal average of maximum trophic positions using sglv output — foodchain","title":"Spatiotemporal average of maximum trophic positions using sglv output — foodchain","text":"Spatiotemporal average maximum trophic positions using sglv output","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/foodchain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatiotemporal average of maximum trophic positions using sglv output — foodchain","text":"","code":"foodchain(   n,   n_species,   n_patch,   alpha,   start = ceiling(max(n[, 1]) - max(n[, 1]) * 0.5) + 1,   end = floor(max(n[, 1])),   full = FALSE )"},{"path":"https://aterui.github.io/mcbrnet/reference/foodchain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatiotemporal average of maximum trophic positions using sglv output — foodchain","text":"n Numeric. Matrix output sglv n_species Integer. Number species n_patch Integer. Number habitat patches alpha Numeric. Interaction matrix start Integer. Initial time step included calculation. floor applied internally end Integer. Last time step included calculation. floor applied internally full Logical. TRUE, full spatiotemporal matrix food chain length returned attributes.","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/foodchain.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spatiotemporal average of maximum trophic positions using sglv output — foodchain","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/foodweb.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a food web based on the preferential prey model — foodweb","title":"Generate a food web based on the preferential prey model — foodweb","text":"Generate food web based preferential prey model","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/foodweb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a food web based on the preferential prey model — foodweb","text":"","code":"foodweb(   n_species,   n_basal,   l,   theta,   cannibal = FALSE,   competition = list(min = 0, max = 0),   attack = list(min = 0, max = 1),   convert = list(min = 0, max = 1),   regulation = list(min = 0, max = 1) )"},{"path":"https://aterui.github.io/mcbrnet/reference/foodweb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a food web based on the preferential prey model — foodweb","text":"n_species Integer. Number species n_basal Integer. Number basal species l Interger. Expected number links upper triangle theta Numeric. Scale parameter exponential distribution. Smaller values indicate greater trophic specialization. cannibal Logical. TRUE, cannibalism allowed competition List competition coefficients producers. Specify minimum maximum values uniform distribution. attack List attack rates. Specify minimum maximum values uniform distribution. convert List conversion efficiency. Specify minimum maximum values uniform distribution. regulation List self regulation (intraspecific competition). Specify minimum maximum values uniform distribution.","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/foodweb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a food web based on the preferential prey model — foodweb","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/frgm.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispersal probability matrix after accounting for network fragmentation — frgm","title":"Dispersal probability matrix after accounting for network fragmentation — frgm","text":"Dispersal probability matrix accounting network fragmentation","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/frgm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispersal probability matrix after accounting for network fragmentation — frgm","text":"","code":"frgm(x, rate, pattern = \"random\", p = NULL, n_barrier)"},{"path":"https://aterui.github.io/mcbrnet/reference/frgm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispersal probability matrix after accounting for network fragmentation — frgm","text":"x 'brnet' object adjacency matrix rate rate parameter exponential dispersal kernel pattern fragmentation pattern p passability fragmented edges (probability) n_barrier number barriers","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/frgm.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Dispersal probability matrix after accounting for network fragmentation — frgm","text":"see package webpage instruction","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/frgm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dispersal probability matrix after accounting for network fragmentation — frgm","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Return adjacency in a linear habitat — fun_adj","title":"Return adjacency in a linear habitat — fun_adj","text":"Return adjacency linear habitat","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return adjacency in a linear habitat — fun_adj","text":"","code":"fun_adj(n, start_id = 1)"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return adjacency in a linear habitat — fun_adj","text":"n Number nodes start_id Start node ID","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_dispersal.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispersal — fun_dispersal","title":"Dispersal — fun_dispersal","text":"Dispersal","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_dispersal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispersal — fun_dispersal","text":"","code":"fun_dispersal(x, v_p_dispersal, m_dispersal)"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_dispersal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispersal — fun_dispersal","text":"x Population size matrix v_p_dispersal Vector dispersal probability m_dispersal Dispersal matrix","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_disp_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"To dispersal matrix — fun_disp_mat","title":"To dispersal matrix — fun_disp_mat","text":"dispersal matrix","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_disp_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To dispersal matrix — fun_disp_mat","text":"","code":"fun_disp_mat(   n_patch,   landscape_size,   theta,   xy_coord = NULL,   distance_matrix = NULL,   dispersal_matrix = NULL )"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_disp_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To dispersal matrix — fun_disp_mat","text":"n_patch Number patches metacommunity. landscape_size Length landscape side. Enabled dispersal_matrix = NULL. theta Rate parameter exponential dispersal kernel. xy_coord Site coordinates. Must provided data frame row corresponds individual site x y coordinates (columns). Defualt NULL. distance_matrix Distance matrix indicating distance habitat patches. provided, distance matrix used generate dispersal matrix calculate distance decay environmental correlations. Default NULL. dispersal_matrix Dispersal matrix used simulate dispersal process. Override distance_matrix. Default NULL.","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_get_fcl.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fcl — fun_get_fcl","title":"Get fcl — fun_get_fcl","text":"Get fcl","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_get_fcl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fcl — fun_get_fcl","text":"","code":"fun_get_fcl(x, delta)"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_get_fcl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fcl — fun_get_fcl","text":"x Community matrix delta Preference basal ig-prey","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_get_n_branch.html","id":null,"dir":"Reference","previous_headings":"","what":"Get n_branch — fun_get_n_branch","title":"Get n_branch — fun_get_n_branch","text":"Get n_branch","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_get_n_branch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get n_branch — fun_get_n_branch","text":"","code":"fun_get_n_branch(n_patch, p_branch)"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_get_n_branch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get n_branch — fun_get_n_branch","text":"n_patch Number patches network. p_branch Branching probability (success probability geometric distribution).","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_igp.html","id":null,"dir":"Reference","previous_headings":"","what":"IGP function — fun_igp","title":"IGP function — fun_igp","text":"IGP function","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_igp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IGP function — fun_igp","text":"","code":"fun_igp(   x,   r_b = 5,   k = 100,   e = c(0.8, 0.8, 0.8),   a = c(2, 2, 2),   h = c(0.1, 0.1, 0.1),   s = 0 )"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_igp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IGP function — fun_igp","text":"x Community matrix basal, intraguild prey (ig-prey), intraguild predator (ig-predator) r_b Maximum reproductive rate basal species k Carrying capacity basal species e Energetic conversion efficiency; must given order basal ig-prey, basal ig-predator, ig-prey ig-predator Attack rate. Must given order basal ig_prey, basal ig-predator, ig-prey ig-predator h Handling time. Must given order basal ig_prey, basal ig-predator, ig-prey ig-predator s Strength prey switching ig-prey basal","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_int_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Interaction matrix — fun_int_mat","title":"Interaction matrix — fun_int_mat","text":"Interaction matrix","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_int_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interaction matrix — fun_int_mat","text":"","code":"fun_int_mat(n_species, alpha, min_alpha, max_alpha, interaction_type)"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_int_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interaction matrix — fun_int_mat","text":"n_species Number species metacommunity. alpha Species interaction strength. Enabled interaction_type = \"constant\". Default 0. min_alpha Minimum value uniform distribution generates species interaction strength. Enabled interaction_type = \"random\". Default NULL. max_alpha Maximum value uniform distribution generates species interaction strength. Enabled interaction_type = \"random\". Default NULL. interaction_type \"constant\" \"random\". \"constant\" assumes unique interaction strength alpha pairs species. \"random\" draws random numbers uniform distribution min_alpha max_alpha.","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_m_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjacency matrix in branching networks — fun_m_adj","title":"Adjacency matrix in branching networks — fun_m_adj","text":"Adjacency matrix branching networks","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_m_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjacency matrix in branching networks — fun_m_adj","text":"","code":"fun_m_adj(n_patch, p_branch, n_branch, n_patch_free)"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_m_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjacency matrix in branching networks — fun_m_adj","text":"n_patch Number patches network. p_branch Branching probability (success probability geometric distribution). n_branch Number branches n_patch_free Whether imposing constraint n_patch. TRUE, number patches random variable following negative binomial distribution.","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_partial.html","id":null,"dir":"Reference","previous_headings":"","what":"Yield partial derivatives — fun_partial","title":"Yield partial derivatives — fun_partial","text":"Yield partial derivatives","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_partial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Yield partial derivatives — fun_partial","text":"","code":"fun_partial(r, a, i, x0, model)"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_partial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Yield partial derivatives — fun_partial","text":"r Numeric. Intrinsic growth rate species . Numeric vector. Interaction coefficients. Integer. Species numeric ID. x0 Numeric vector. Specify vector equilibrium densities modeled species. model Character. Specify model type. Either \"ricker\" (Ricker), \"bh\" (Beverton-Holt), \"glv\" (Generalized Lotka-Volterra).","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_patch_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted-mean patch attributes — fun_patch_attr","title":"Weighted-mean patch attributes — fun_patch_attr","text":"Weighted-mean patch attributes","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_patch_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted-mean patch attributes — fun_patch_attr","text":"","code":"fun_patch_attr(   x,   n_branch,   mean_source,   sd_source,   sd_lon,   m_distance,   rho = 1,   v_wa,   logit = FALSE )"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_patch_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted-mean patch attributes — fun_patch_attr","text":"x Adjacency matrix converted n_branch Number branches mean_source Mean value source attribute sd_source SD source attribute sd_lon SD longitudinal change m_distance Distance matrix rho Longitudinal autocorrelation v_wa Vector watershed area logit Logit transformation mean source attribute","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_to_m.html","id":null,"dir":"Reference","previous_headings":"","what":"To matrix — fun_to_m","title":"To matrix — fun_to_m","text":"matrix","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_to_m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To matrix — fun_to_m","text":"","code":"fun_to_m(x, n_species, n_patch, param_attr)"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_to_m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To matrix — fun_to_m","text":"x Scalar vector n_species Number species n_patch Number patches param_attr Indicate species patch attribute","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_to_v.html","id":null,"dir":"Reference","previous_headings":"","what":"To vector — fun_to_v","title":"To vector — fun_to_v","text":"vector","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_to_v.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To vector — fun_to_v","text":"","code":"fun_to_v(x, n)"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_to_v.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To vector — fun_to_v","text":"x Scalar vector n Replication (n_species n_patch)","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_to_v.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"To vector — fun_to_v","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_wa.html","id":null,"dir":"Reference","previous_headings":"","what":"Watershed area — fun_wa","title":"Watershed area — fun_wa","text":"Watershed area","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/fun_wa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Watershed area — fun_wa","text":"","code":"fun_wa(x)"},{"path":"https://aterui.github.io/mcbrnet/reference/fun_wa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Watershed area — fun_wa","text":"x Adjacency matrix converted","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/ggbrnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize a branching network — ggbrnet","title":"Visualize a branching network — ggbrnet","text":"Visualize branching network","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/ggbrnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize a branching network — ggbrnet","text":"","code":"ggbrnet(   x,   patch_color = \"env\",   edge_color = \"black\",   edge_weight = \"none\",   value_col = NULL,   color_label = NULL,   patch_label = \"none\",   patch_size = 3,   ... )"},{"path":"https://aterui.github.io/mcbrnet/reference/ggbrnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize a branching network — ggbrnet","text":"x brnet() object patch_color Type patch (vertex) label (either \"env\", \"disturbance\", \"\" color). Default \"env\". edge_color Edge color edge_weight Type edge weight (\"passability\"). Default NULL. value_col Patch values. Must specified patch_color = \"\". color_label Color legend title patch_label Type patch (vertex) label (either \"patch\", \"branch\", \"n_upstream\"). \"patch\" shows patch ID, \"branch\" branch ID, \"n_upstream\" number upstream contributing patches. \"none\", label shown patches plot. Default \"none\". patch_size Patch (vertex) size plot. ... Arguments passed ggraph::geom_node_label().","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/ggbrnet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualize a branching network — ggbrnet","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/igpsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate meta-food web dynamics with intraguild predation — igpsim","title":"Simulate meta-food web dynamics with intraguild predation — igpsim","text":"Simulate meta-food web dynamics intraguild predation","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/igpsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate meta-food web dynamics with intraguild predation — igpsim","text":"","code":"igpsim(   n_patch = 5,   n_warmup = 200,   n_burnin = 200,   n_timestep = 1000,   r_b = 10,   conv_eff = 0.9,   attack_rate = 0.05,   handling_time = 0.5,   s = 0,   propagule_interval = NULL,   propagule_seed = c(100, 10, 1),   carrying_capacity = 100,   xy_coord = NULL,   distance_matrix = NULL,   dispersal_matrix = NULL,   p_disturb = 0,   i_disturb = 0,   phi_disturb = Inf,   landscape_size = 10,   p_dispersal = 0.1,   theta = 1,   plot = FALSE )"},{"path":"https://aterui.github.io/mcbrnet/reference/igpsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate meta-food web dynamics with intraguild predation — igpsim","text":"n_patch Number patches metacommunity. n_warmup Number time-steps warm-. Default 200. n_burnin Number time-steps burn-. Default 200. n_timestep Number time-steps saved. Default 1000. r_b Maximum reproductive rate basal species conv_eff Energetic conversion efficiency; must given order basal ig-prey, basal ig-predator, ig-prey ig-predator attack_rate Attack rate. Must given order basal ig_prey, basal ig-predator, ig-prey ig-predator handling_time Handling time. Must given order basal ig_prey, basal ig-predator, ig-prey ig-predator s Strength switching basal ig-prey (confined 0 - 1). Switching basal species likely occur higher values. propagule_interval Time interval propagule introduction warm-. NULL, value ceiling(n_warmup / 10) used. propagule_seed Propagule mean density (intensity parameter Poisson distribution). given scalar vector. given vector, elements appear order basal, intra-guild prey, intra-guild predator. carrying_capacity Carrying capacities individual patches. Length must one equal n_patch. Default 100. xy_coord Data frame site coordinates. row correspond individual patch, x y coordinates (columns). Defualt NULL. distance_matrix Distance matrix indicating distance habitat patches. provided, distance matrix used generate dispersal matrix calculate distance decay environmental correlations. Default NULL. dispersal_matrix Dispersal matrix used simulate dispersal process. Override distance_matrix. Default NULL. p_disturb Disturbance probability. i_disturb Disturbance-induced proportional mortality. phi_disturb Temporal precision disturbance-induced proportional mortality. Set Inf assume temporal variability. landscape_size Length landscape side. Enabled dispersal_matrix = NULL. p_dispersal Probability dispersal. Length must one equal n_species. theta Dispersal parameter describing dispersal capability species. plot TRUE, five sample patches species df_dynamics plotted.","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/igpsim.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Simulate meta-food web dynamics with intraguild predation — igpsim","text":"see package webpage instruction","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/igpsim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate meta-food web dynamics with intraguild predation — igpsim","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/max_tp.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum trophic position — max_tp","title":"Maximum trophic position — max_tp","text":"Maximum trophic position","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/max_tp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum trophic position — max_tp","text":"","code":"max_tp(n_species, n, alpha)"},{"path":"https://aterui.github.io/mcbrnet/reference/max_tp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum trophic position — max_tp","text":"n_species Integer. Number species n Numeric vector. Vector species density alpha Numeric matrix. n_species x n_species interaction matrix","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/max_tp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Maximum trophic position — max_tp","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/mcbrnet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mcbrnet: Ecological simulation in spatial networks — mcbrnet-package","title":"mcbrnet: Ecological simulation in spatial networks — mcbrnet-package","text":"Ecological simulation spatial networks.","code":""},{"path":[]},{"path":"https://aterui.github.io/mcbrnet/reference/mcsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate metacommunity dynamics — mcsim","title":"Simulate metacommunity dynamics — mcsim","text":"Simulate metacommunity dynamics","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/mcsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate metacommunity dynamics — mcsim","text":"","code":"mcsim(   n_species = 5,   n_patch = 5,   n_warmup = 200,   n_burnin = 200,   n_timestep = 1000,   propagule_interval = NULL,   propagule_seed = 0.5,   carrying_capacity = 100,   xi = 1,   interaction_type = \"constant\",   alpha = 0,   min_alpha = NULL,   max_alpha = NULL,   r0 = 4,   niche_optim = NULL,   min_optim = -1,   max_optim = 1,   sd_niche_width = NULL,   min_niche_width = 0.1,   max_niche_width = 1,   niche_cost = 1,   xy_coord = NULL,   distance_matrix = NULL,   dispersal_matrix = NULL,   p_disturb = 0,   i_disturb = 0,   landscape_size = 10,   mean_env = 0,   sd_env = 0.1,   spatial_env_cor = FALSE,   phi = 1,   p_dispersal = 0.1,   theta = 1,   zeta = 0,   impact = 0,   plot = FALSE )"},{"path":"https://aterui.github.io/mcbrnet/reference/mcsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate metacommunity dynamics — mcsim","text":"n_species Number species metacommunity. n_patch Number patches metacommunity. n_warmup Number time-steps warm-. Default 200. n_burnin Number time-steps burn-. Default 200. n_timestep Number time-steps saved. Default 1000. propagule_interval Time interval propagule introduction warm-. NULL, value ceiling(n_warmup / 10) used. propagule_seed Propagule mean density (intensity parameter Poisson distribution). Default 0.5. carrying_capacity Carrying capacities individual patches. Length must one equal n_patch. Default 100. xi Hassell exponent. Undercompensation (xi < 1), compensation (xi = 1; reduced Beverton-Holt), overcompensation (xi > 1). interaction_type \"constant\" \"random\". \"constant\" assumes unique interaction strength alpha pairs species. \"random\" draws random numbers uniform distribution min_alpha max_alpha. alpha Species interaction strength. Enabled interaction_type = \"constant\". Default 0. min_alpha Minimum value uniform distribution generates species interaction strength. Enabled interaction_type = \"random\". Default NULL. max_alpha Maximum value uniform distribution generates species interaction strength. Enabled interaction_type = \"random\". Default NULL. r0 Maximum reproductive number Beverton-Holt model. Length must one equal n_species. niche_optim Niche optimum species (environmental value maximizes reproductive number). Length must one equal n_species. Default NULL. min_optim Minimum value uniform distribution generates optimal environmental values simulated species. Values randomly assigned species. Enabled niche_optim = NULL. max_optim Maximum value uniform distribution generates optimal environmental values simulated species. Values randomly assigned species. Enabled niche_optim = NULL. sd_niche_width Niche width species. Higher values indicate greater niche width. Length must one equal n_species. min_niche_width Minimum value uniform distribution generates niche width values simulated species. Values randomly assigned species. Enabled sd_niche_width = NULL. max_niche_width Maximum value uniform distribution generates niche width values simulated species. Values randomly assigned species. Enabled sd_niche_width = NULL. niche_cost Determine cost wide niche (smaller values imply greater costs wider niche). Default 1. xy_coord Site coordinates. Must provided data frame row corresponds individual site x y coordinates (columns). Defualt NULL. distance_matrix Distance matrix indicating distance habitat patches. provided, distance matrix used generate dispersal matrix calculate distance decay environmental correlations. Default NULL. dispersal_matrix Dispersal matrix used simulate dispersal process. Override distance_matrix. Default NULL. p_disturb Disturbance probability. i_disturb Disturbance intensity expressed proportional mortality (0 1). Length must one equal n_patch. landscape_size Length landscape side. Enabled dispersal_matrix = NULL. mean_env Mean environmental values patches. Length must one equal n_patch. sd_env Standard deviation temporal environmental variation patch. spatial_env_cor TRUE, spatial autocorrelation temporal environmental fluctuation considered. Default FALSE. phi Parameter describing distance decay spatial autocorrelation temporal environmental fluctuation. Enabled spatial_env_cor = TRUE. p_dispersal Dispersal probability. Length must one equal n_species. theta Rate parameter exponential dispersal kernel. zeta Species sensitivity environmental pollutants. impact Concentration environmental pollutants. plot TRUE, five sample patches species df_dynamics plotted.","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/mcsim.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Simulate metacommunity dynamics — mcsim","text":"see package webpage instruction","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/mcsim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate metacommunity dynamics — mcsim","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/mcsim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate metacommunity dynamics — mcsim","text":"","code":"if (FALSE) { # not run mcsim(n_patch = 5, n_species = 5) }"},{"path":"https://aterui.github.io/mcbrnet/reference/ppm.html","id":null,"dir":"Reference","previous_headings":"","what":"Preferential prey model — ppm","title":"Preferential prey model — ppm","text":"Preferential prey model","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/ppm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preferential prey model — ppm","text":"","code":"ppm(n_species, n_basal, l, theta, cannibal = FALSE, lower_tri = TRUE)"},{"path":"https://aterui.github.io/mcbrnet/reference/ppm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preferential prey model — ppm","text":"n_species Integer. Number species n_basal Integer. Number basal species l Interger. Expected number links upper triangle theta Numeric. Scale parameter exponential distribution. Smaller values indicate greater trophic specialization. cannibal Logical. TRUE, cannibalism allowed lower_tri Logical. TRUE, lower triangle elements matrix returned","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/ppm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Preferential prey model — ppm","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/ptsource.html","id":null,"dir":"Reference","previous_headings":"","what":"Create point source disturbance — ptsource","title":"Create point source disturbance — ptsource","text":"Create point source disturbance","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/ptsource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create point source disturbance — ptsource","text":"","code":"ptsource(x, n_source, p, q, pattern = \"random\")"},{"path":"https://aterui.github.io/mcbrnet/reference/ptsource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create point source disturbance — ptsource","text":"x brnet() object n_source Number point sources p Reduction factor downstream propagation q Reduction factor upstream propagation pattern Spatial pattern point sources. \"random\", \"cluster\", \"upstream\", \"downstream\"","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/ptsource.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Create point source disturbance — ptsource","text":"see package webpage instruction","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/ptsource.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create point source disturbance — ptsource","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample function — resample","title":"Resample function — resample","text":"Resample function","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample function — resample","text":"","code":"resample(x, ...)"},{"path":"https://aterui.github.io/mcbrnet/reference/resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample function — resample","text":"x Vector ... Additional arguments passed sample","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/sglv.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial generalized Lotka-Volterra model — sglv","title":"Spatial generalized Lotka-Volterra model — sglv","text":"Spatial generalized Lotka-Volterra model","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/sglv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial generalized Lotka-Volterra model — sglv","text":"","code":"sglv(   n_species,   n_patch,   n_timestep = 100,   interval = 0.01,   r,   alpha,   dispersal = list(adj = matrix(0, nrow = n_patch, ncol = n_patch), phi = 0, m = 0),   disturb = list(int = 1, rate = (1/n_timestep) * 10, s = interval * 10),   n0 = list(min = 0, max = 1),   threshold = 0,   cpp = TRUE,   ... )"},{"path":"https://aterui.github.io/mcbrnet/reference/sglv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial generalized Lotka-Volterra model — sglv","text":"n_species Integer. Number species n_patch Integer. Number habitat patches n_timestep Integer. Number time step simulation run interval Numeric. Time interval used numerical ODE solver r Numeric. Intrinsic growth rates modeled species alpha n_species x n_species interaction matrix dispersal List. list must contain following parameters named elements: adj n_patch x n_patch adjacency matrix; phi dispersal rate; m dispersal mortality rate. disturb List. list must contain following parameters named elements: int disturbance intensity; rate disturbance frequency; s scale parameter controls duration disturbance. n0 List. Initial densities modeled species randomly generated runif(n_species, min = min, max = max). list must contain min max named elements. threshold Numeric. Extinction threshold. Species removed simulation species density goes value cpp Logical. TRUE, Rcpp function used numerical solver ... Additional arguments passed ode","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/sglv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spatial generalized Lotka-Volterra model — sglv","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a leading eigenvalue — stability","title":"Calculate a leading eigenvalue — stability","text":"Calculate leading eigenvalue","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a leading eigenvalue — stability","text":"","code":"stability(n_species, r, x0, alpha, model = \"glv\")"},{"path":"https://aterui.github.io/mcbrnet/reference/stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a leading eigenvalue — stability","text":"n_species Integer. Number species. r Numeric vector. Specify vector intrinsic growth rates modeled species. x0 Numeric vector. Specify vector equilibrium densities modeled species. alpha Numeric matrix. Specify interaction matrix. model Character. Specify model type. Either \"ricker\" (Ricker), \"bh\" (Beverton-Holt), \"glv\" (Generalized Lotka-Volterra).","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/stability.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate a leading eigenvalue — stability","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/to_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply conversion efficiency and attack rate — to_alpha","title":"Apply conversion efficiency and attack rate — to_alpha","text":"Apply conversion efficiency attack rate","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/to_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply conversion efficiency and attack rate — to_alpha","text":"","code":"to_alpha(   alpha0,   competition = list(min = 0, max = 0),   attack = list(min = 0, max = 1),   convert = list(min = 0, max = 1),   regulation = list(min = 0, max = 1) )"},{"path":"https://aterui.github.io/mcbrnet/reference/to_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply conversion efficiency and attack rate — to_alpha","text":"alpha0 Numeric matrix. n_species x n_species interaction matrix competition List competition coefficients producers. Specify minimum maximum values uniform distribution. attack List attack rates. Specify minimum maximum values uniform distribution. convert List conversion efficiency. Specify minimum maximum values uniform distribution. regulation List self regulation (intraspecific competition). Specify minimum maximum values uniform distribution.","code":""},{"path":"https://aterui.github.io/mcbrnet/reference/to_alpha.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply conversion efficiency and attack rate — to_alpha","text":"Akira Terui, hanabi0111@gmail.com","code":""},{"path":"https://aterui.github.io/mcbrnet/news/index.html","id":"mcbrnet-140-102423","dir":"Changelog","previous_headings":"","what":"mcbrnet 1.4.0 (10/24/23)","title":"mcbrnet 1.4.0 (10/24/23)","text":"add new major functions sglv(), foodweb(), foodchain(), findr(); full documentation follow full description igpsim() now available; see Articles moved utility functions utils.R","code":""},{"path":"https://aterui.github.io/mcbrnet/news/index.html","id":"mcbrnet-131-071023","dir":"Changelog","previous_headings":"","what":"mcbrnet 1.3.1 (07/10/23)","title":"mcbrnet 1.3.1 (07/10/23)","text":"add new function frgm() update igpsim(): full description coming soon","code":""},{"path":"https://aterui.github.io/mcbrnet/news/index.html","id":"mcbrnet-130-061522","dir":"Changelog","previous_headings":"","what":"mcbrnet 1.3.0 (06/15/22)","title":"mcbrnet 1.3.0 (06/15/22)","text":"add new function ptsource() add new arguments mcsim() update ggbrnet() compatible piping","code":""},{"path":"https://aterui.github.io/mcbrnet/news/index.html","id":"mcbrnet-123-041322","dir":"Changelog","previous_headings":"","what":"mcbrnet 1.2.3 (04/13/22)","title":"mcbrnet 1.2.3 (04/13/22)","text":"fix bug fun_disp_mat() add ggbrnet() add disturbance arguments mcsim() (p_disturb & m_disturb)","code":""},{"path":"https://aterui.github.io/mcbrnet/news/index.html","id":"mcbrnet-122-032422","dir":"Changelog","previous_headings":"","what":"mcbrnet 1.2.2 (03/24/22)","title":"mcbrnet 1.2.2 (03/24/22)","text":"fix bug fun_igp()","code":""},{"path":"https://aterui.github.io/mcbrnet/news/index.html","id":"mcbrnet-121-030922","dir":"Changelog","previous_headings":"","what":"mcbrnet 1.2.1 (03/09/22)","title":"mcbrnet 1.2.1 (03/09/22)","text":"implement internal functions mcsim() brnet() remove argument weighted_distance_matrix mcsim() brnet() add argument dispersal_matrix mcsim()","code":""},{"path":"https://aterui.github.io/mcbrnet/news/index.html","id":"mcbrnet-120-030922","dir":"Changelog","previous_headings":"","what":"mcbrnet 1.2.0 (03/09/22)","title":"mcbrnet 1.2.0 (03/09/22)","text":"add major function igpsim() simplified brnet() mcsim() introducing internal sub-functions","code":""},{"path":"https://aterui.github.io/mcbrnet/news/index.html","id":"mcbrnet-111-120721","dir":"Changelog","previous_headings":"","what":"mcbrnet 1.1.1 (12/07/21)","title":"mcbrnet 1.1.1 (12/07/21)","text":"add local noise parameter disturbance values brnet() (argument sd_disturb_lon)","code":""},{"path":"https://aterui.github.io/mcbrnet/news/index.html","id":"mcbrnet-110-080221","dir":"Changelog","previous_headings":"","what":"mcbrnet 1.1.0 (08/02/21)","title":"mcbrnet 1.1.0 (08/02/21)","text":"add disturbance arguments brnet() added function adjtodist()","code":""},{"path":"https://aterui.github.io/mcbrnet/news/index.html","id":"mcbrnet-100-050321","dir":"Changelog","previous_headings":"","what":"mcbrnet 1.0.0 (05/03/21)","title":"mcbrnet 1.0.0 (05/03/21)","text":"initial release","code":""}]
